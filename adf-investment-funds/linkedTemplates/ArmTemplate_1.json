{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-investment-funds"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_funds_historic_quotes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_cvm_raw_if_adls",
								"type": "DatasetReference"
							},
							"name": "investimentFundsQuotes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sink_cvm_funds_transform",
								"type": "DatasetReference"
							},
							"name": "FundsQuotesSink",
							"rejectedDataLinkedService": {
								"referenceName": "ls_cvm_if_adls",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "selectOnlyRequiredFields"
						}
					],
					"scriptLines": [
						"source(output(",
						"          TP_FUNDO as string,",
						"          CNPJ_FUNDO as string,",
						"          DT_COMPTC as date 'yyyy-MM-dd',",
						"          VL_TOTAL as decimal(13,2),",
						"          VL_QUOTA as float,",
						"          VL_PATRIM_LIQ as decimal(13,2),",
						"          CAPTC_DIA as decimal(13,2),",
						"          RESG_DIA as decimal(13,2),",
						"          NR_COTST as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> investimentFundsQuotes",
						"investimentFundsQuotes select(mapColumn(",
						"          tipo_fundo = TP_FUNDO,",
						"          cnpj_fundo = CNPJ_FUNDO,",
						"          dt_posicao = DT_COMPTC,",
						"          valor_total = VL_TOTAL,",
						"          valor_quota = VL_QUOTA,",
						"          valor_patrim_liquido = VL_PATRIM_LIQ,",
						"          capacity_dia = CAPTC_DIA,",
						"          resgates_dia = RESG_DIA,",
						"          numero_cotistas = NR_COTST",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectOnlyRequiredFields",
						"selectOnlyRequiredFields sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> FundsQuotesSink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_funds_register')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_cvm_funds_register_source_trasnform",
								"type": "DatasetReference"
							},
							"name": "InvestimentFundsRegisterSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_cvm_funds_register_sink_transform",
								"type": "DatasetReference"
							},
							"name": "InvestimentFundsRegisterSink"
						}
					],
					"transformations": [
						{
							"name": "SelectColumnsFundsrRegister"
						}
					],
					"scriptLines": [
						"source(output(",
						"          TP_FUNDO as string,",
						"          CNPJ_FUNDO as string,",
						"          DENOM_SOCIAL as string,",
						"          DT_REG as date 'yyyy-MM-dd',",
						"          DT_CONST as date 'yyyy-MM-dd',",
						"          CD_CVM as string,",
						"          DT_CANCEL as date 'yyyy-MM-dd',",
						"          SIT as string,",
						"          DT_INI_SIT as date 'yyyy-MM-dd',",
						"          DT_INI_ATIV as date 'yyyy-MM-dd',",
						"          DT_INI_EXERC as date 'yyyy-MM-dd',",
						"          DT_FIM_EXERC as date 'yyyy-MM-dd',",
						"          CLASSE as string,",
						"          DT_INI_CLASSE as date 'yyyy-MM-dd',",
						"          RENTAB_FUNDO as string,",
						"          CONDOM as string,",
						"          FUNDO_COTAS as string,",
						"          FUNDO_EXCLUSIVO as string,",
						"          TRIB_LPRAZO as string,",
						"          PUBLICO_ALVO as string,",
						"          ENTID_INVEST as string,",
						"          TAXA_PERFM as float,",
						"          INF_TAXA_PERFM as string,",
						"          TAXA_ADM as float,",
						"          INF_TAXA_ADM as string,",
						"          VL_PATRIM_LIQ as decimal(13,2),",
						"          DT_PATRIM_LIQ as date 'yyyy-MM-dd',",
						"          DIRETOR as string,",
						"          CNPJ_ADMIN as string,",
						"          ADMIN as string,",
						"          PF_PJ_GESTOR as string,",
						"          CPF_CNPJ_GESTOR as string,",
						"          GESTOR as string,",
						"          CNPJ_AUDITOR as string,",
						"          AUDITOR as string,",
						"          CNPJ_CUSTODIANTE as string,",
						"          CUSTODIANTE as string,",
						"          CNPJ_CONTROLADOR as string,",
						"          CONTROLADOR as string,",
						"          INVEST_CEMPR_EXTER as string,",
						"          CLASSE_ANBIMA as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> InvestimentFundsRegisterSource",
						"InvestimentFundsRegisterSource select(mapColumn(",
						"          tipo_fundo = TP_FUNDO,",
						"          cnpj_fundo = CNPJ_FUNDO,",
						"          denom_social = DENOM_SOCIAL,",
						"          data_registro = DT_REG,",
						"          data_constituicao = DT_CONST,",
						"          cod_cvm = CD_CVM,",
						"          data_cancel = DT_CANCEL,",
						"          situacao = SIT,",
						"          data_inicio_sit = DT_INI_SIT,",
						"          data_inicio_ativ = DT_INI_ATIV,",
						"          data_inicio_exerc = DT_INI_EXERC,",
						"          data_fim_exerc = DT_FIM_EXERC,",
						"          classe = CLASSE,",
						"          data_inicio_classe = DT_INI_CLASSE,",
						"          rentab_fundo = RENTAB_FUNDO,",
						"          tributacao_lp = TRIB_LPRAZO,",
						"          publico_alvo = PUBLICO_ALVO,",
						"          taxa_perfm = TAXA_PERFM,",
						"          taxa_adm = TAXA_ADM,",
						"          vl_patrim_liq = VL_PATRIM_LIQ,",
						"          data_patrim_liq = DT_PATRIM_LIQ,",
						"          admin = ADMIN,",
						"          tipo_gestor = PF_PJ_GESTOR,",
						"          ident_gestor = CPF_CNPJ_GESTOR,",
						"          nome_gestor = GESTOR,",
						"          cnpj_custodiante = CNPJ_CUSTODIANTE,",
						"          custodiante = CUSTODIANTE,",
						"          cnpj_controlador = CNPJ_CONTROLADOR,",
						"          controlador = CONTROLADOR,",
						"          classe_ambima = CLASSE_ANBIMA",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectColumnsFundsrRegister",
						"SelectColumnsFundsrRegister sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     filePattern:'register_fii_transform.csv',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> InvestimentFundsRegisterSink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup for historic CVM file links",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "raw/cvm_historic_quotes_links.csv",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": true,
									"partitionRootPath": "raw/cvm_historic_quotes_links.csv"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_cvm_if_historic_quotes_links",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy investment funds historic quotes for every year",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup for historic CVM file links",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup for historic CVM file links').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@variables('exist')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy from http binary historic quotes_copy1_copy1_copy1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 1,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "HttpReadSettings",
															"requestMethod": "GET"
														},
														"formatSettings": {
															"type": "BinaryReadSettings",
															"compressionProperties": {
																"type": "ZipDeflateReadSettings",
																"preserveZipFileNameAsFolder": false
															}
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "ds_binary_test",
														"type": "DatasetReference",
														"parameters": {
															"relativeURL": {
																"value": "@concat(item().url,'.zip')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_cvm_if_links_binary_adls",
														"type": "DatasetReference",
														"parameters": {
															"relativeURL": {
																"value": "@concat(item().url,'.zip')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Copy data from zipped binary to csv_copy2_copy1_copy1",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Copy from http binary historic quotes_copy1_copy1_copy1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings",
															"compressionProperties": {
																"type": "ZipDeflateReadSettings"
															}
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_cvm_if_zip_adls",
														"type": "DatasetReference",
														"parameters": {
															"fileName": {
																"value": "@concat(item().url,'.zip')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_cvm_if_csv_adls",
														"type": "DatasetReference",
														"parameters": {
															"fileName": {
																"value": "@concat(item().url,'.csv')",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "Get Metadata1_copy1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_cvm_if_links_binary_adls",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": "@concat(item().url,'.zip')"
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Metadata1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "exist",
										"value": {
											"value": "@activity('Get Metadata1_copy1').output.exists",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Transform historic quotes",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy investment funds historic quotes for every year",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform_funds_historic_quotes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"investimentFundsQuotes": {},
									"FundsQuotesSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"exists": {
						"type": "String"
					},
					"exist": {
						"type": "Boolean"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transform_funds_historic_quotes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform_funds_historic_quotes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"investimentFundsQuotes": {},
									"FundsQuotesSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"fileName": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transform_funds_historic_quotes')]"
			]
		}
	]
}