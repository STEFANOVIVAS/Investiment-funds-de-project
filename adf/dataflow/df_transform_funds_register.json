{
	"name": "df_transform_funds_register",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_cvm_raw_if_adls",
						"type": "DatasetReference"
					},
					"name": "investimentFundsQuotes"
				},
				{
					"dataset": {
						"referenceName": "ds_cvm_funds_register_adls",
						"type": "DatasetReference"
					},
					"name": "RegisterFundsLookup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sink_cvm_funds_transform",
						"type": "DatasetReference"
					},
					"name": "FundsQuotesSink",
					"rejectedDataLinkedService": {
						"referenceName": "ls_cvm_if_adls",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "selectOnlyRequiredFields"
				},
				{
					"name": "LookupRegisterFunds"
				},
				{
					"name": "SelectOnlyRequiredRegisterFields"
				}
			],
			"scriptLines": [
				"parameters{",
				"     fileName as string",
				"}",
				"source(output(",
				"          TP_FUNDO as string,",
				"          CNPJ_FUNDO as string,",
				"          DT_COMPTC as string,",
				"          VL_TOTAL as string,",
				"          VL_QUOTA as string,",
				"          VL_PATRIM_LIQ as string,",
				"          CAPTC_DIA as string,",
				"          RESG_DIA as string,",
				"          NR_COTST as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     modifiedAfter: (toTimestamp(1707696000000L)),",
				"     modifiedBefore: (toTimestamp(1707782340000L)),",
				"     wildcardPaths:[(concat($fileName,'.csv'))]) ~> investimentFundsQuotes",
				"source(output(",
				"          TP_FUNDO as string,",
				"          CNPJ_FUNDO as string,",
				"          DENOM_SOCIAL as string,",
				"          DT_REG as string,",
				"          DT_CONST as string,",
				"          CD_CVM as string,",
				"          DT_CANCEL as string,",
				"          SIT as string,",
				"          DT_INI_SIT as string,",
				"          DT_INI_ATIV as string,",
				"          DT_INI_EXERC as string,",
				"          DT_FIM_EXERC as string,",
				"          CLASSE as string,",
				"          DT_INI_CLASSE as string,",
				"          RENTAB_FUNDO as string,",
				"          CONDOM as string,",
				"          FUNDO_COTAS as string,",
				"          FUNDO_EXCLUSIVO as string,",
				"          TRIB_LPRAZO as string,",
				"          PUBLICO_ALVO as string,",
				"          ENTID_INVEST as string,",
				"          TAXA_PERFM as string,",
				"          INF_TAXA_PERFM as string,",
				"          TAXA_ADM as string,",
				"          INF_TAXA_ADM as string,",
				"          VL_PATRIM_LIQ as string,",
				"          DT_PATRIM_LIQ as string,",
				"          DIRETOR as string,",
				"          CNPJ_ADMIN as string,",
				"          ADMIN as string,",
				"          PF_PJ_GESTOR as string,",
				"          CPF_CNPJ_GESTOR as string,",
				"          GESTOR as string,",
				"          CNPJ_AUDITOR as string,",
				"          AUDITOR as string,",
				"          CNPJ_CUSTODIANTE as string,",
				"          CUSTODIANTE as string,",
				"          CNPJ_CONTROLADOR as string,",
				"          CONTROLADOR as string,",
				"          INVEST_CEMPR_EXTER as string,",
				"          CLASSE_ANBIMA as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> RegisterFundsLookup",
				"investimentFundsQuotes select(mapColumn(",
				"          tipo_fundo = TP_FUNDO,",
				"          cnpj_fundo = CNPJ_FUNDO,",
				"          dt_posicao = DT_COMPTC,",
				"          valor_total = VL_TOTAL,",
				"          valor_quota = VL_QUOTA,",
				"          valor_patrim_liquido = VL_PATRIM_LIQ,",
				"          capacity_dia = CAPTC_DIA,",
				"          resgates_dia = RESG_DIA,",
				"          numero_cotistas = NR_COTST",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectOnlyRequiredFields",
				"selectOnlyRequiredFields, SelectOnlyRequiredRegisterFields lookup(selectOnlyRequiredFields@cnpj_fundo == SelectOnlyRequiredRegisterFields@cnpj_fundo,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupRegisterFunds",
				"RegisterFundsLookup select(mapColumn(",
				"          cnpj_fundo = CNPJ_FUNDO,",
				"          denominacao_social = DENOM_SOCIAL,",
				"          data_cancel = DT_CANCEL",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectOnlyRequiredRegisterFields",
				"LookupRegisterFunds sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     filePattern:(concat($fileName,'_transform.csv')),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> FundsQuotesSink"
			]
		}
	}
}